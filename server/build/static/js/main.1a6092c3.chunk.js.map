{"version":3,"sources":["components/Buttons.js","components/Home/Home.js","components/Host/Host.js","components/Join/Join.js","components/Header.js","components/Footer.js","components/Room/MusicPlayer.js","components/Room/PopUp.js","components/Room/utils.js","components/Room/Song.js","components/Room/SearchSong.js","components/Room/SongQueue.js","components/Room/QueueView.js","components/Room/Room.js","components/AuthCallback.js","App.js","index.js"],"names":["FadeMenu","menuItems","label","startPlaybackOnDevice","useState","anchorEl","setAnchorEl","menu","React","createRef","handleClose","e","GreenButton","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","TransitionComponent","Fade","ref","undefined","map","obj","MenuItem","name","withStyles","root","backgroundColor","green","Button","BlueButton","blue","Home","className","style","fontSize","fontWeight","to","startIcon","PlayArrowOutlined","variant","color","borderRadius","size","Headset","TextStyled","borderColor","borderBottomColor","TextField","CustomCheckBox","Checkbox","Host","session","setSession","allowQueue","setAllowQueue","allowSkip","setAllowSkip","allowPlayPause","setAllowPlayPause","votesToSkip","setVotesToSkip","roomPassCode","setRoomPassCode","usePassCode","setUsePassCode","useEffect","a","fetch","credentials","headers","response","json","data","room","getRoom","getSpotifyLogin","spotifyLogin","window","location","assign","url","createRoom","isAuthenticated","authData","console","log","authenticated","usersCanQueue","usersCanPlayPause","usersCanSkip","override","roomPassword","setPassword","method","body","JSON","stringify","res","Room","localStorage","setItem","code","href","returnToRoom","onChange","target","value","defaultValue","required","type","inputProps","textAlign","FormControlLabel","control","width","Create","error","setError","helperText","setHelperText","setCode","password","onRoomJoin","status","padding","toUpperCase","FormHelperText","styles","header","display","justifyContent","alignItems","textDecoration","span","paddingRight","paddingLeft","Header","Footer","MusicPlayer","currentSong","playSong","pauseSong","skipSong","roomInfo","is_playing","isPlaying","setIsPlaying","voted","setVoted","playOrPause","playPause","isHost","skip","src","item","album","images","height","alt","placeholder","artists","disabled","Pause","PlayArrow","SkipNext","getItem","currentVotes","LinearProgress","progress_ms","duration_ms","PopUp","hidePopUp","props","canPlayPause","setCanPlayPause","canQueue","setCanQueue","canSkip","setCanSkip","skipVotes","setSkipVotes","updatePermissions","checked","params","context_uri","offset","position","Song","bandaid","imgSrc","songName","songLength","dimensions","trackNumber","spotifyTrack","displayButtons","addToQueue","uri","artistsArr","i","push","queueSong","QueueMusic","toFixed","SearchComponent","searchItems","changeSearchView","setQuaryParams","searchSong","searchAnimation","useTransition","from","transform","opacity","enter","next","cancel","leave","trail","ArrowBack","key","div","track_number","SongQueue","songQueue","bounce","queueAnimation","_id","useSpring","Add","length","QueueView","Queue","setSongQueue","parse","setSearchItems","queryParams","setQueryParams","searchView","setSearchView","query","tracks","items","SearchSong","pathname","substring","lastIndexOf","availableDevices","setAvailableDevices","displayPopUp","setDisplayPopUp","setCurrentSong","view","setView","setRoomInfo","contentHeight","setContentHeight","musicViewHeight","setMusicViewHeight","useMeasure","queueRef","queueHeight","musicRef","musicHeight","containerResize","getCurrentSong","getRoomInfo","then","getAvailableDevices","timerID","setInterval","clearInterval","song","deviceID","keys","config","duration","labelPlacement","Switch","elements","document","getElementsByClassName","classList","remove","offsetWidth","add","playAnimation","margin","delay","devices","marginLeft","AuthCallback","urlParams","URLSearchParams","search","has","get","history","replaceState","go","callback","App","path","exact","component","Join","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a6092c3.chunk.js","sourcesContent":["/* \r\n    filename: Buttons.js\r\n    description: contains buttons that are reused throughout the application\r\n*/\r\n\r\nimport React from 'react'\r\nimport { green, blue } from '@material-ui/core/colors'\r\nimport { Button, Menu, MenuItem, withStyles, Fade } from '@material-ui/core'\r\nimport { useState } from 'react'\r\n\r\nexport const FadeMenu = ({ menuItems, label, startPlaybackOnDevice}) => {\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const menu = React.createRef()\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleClose = (e) => {\r\n        setAnchorEl(null)\r\n        startPlaybackOnDevice(e)\r\n    }\r\n    return (\r\n        <>\r\n            <GreenButton aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                {label}\r\n            </GreenButton>\r\n            <Menu\r\n                id=\"fade-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n                ref={menu}\r\n            >\r\n            {menuItems!==undefined && menuItems.map(obj => <MenuItem id={obj.id} key={obj.id} onClick={handleClose}>{obj.name}</MenuItem>)}\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport const GreenButton = withStyles({\r\n    root: {\r\n        backgroundColor: green[400],\r\n        '&:hover': {\r\n            backgroundColor: green[500]\r\n        }\r\n    }\r\n})(Button)\r\nexport const BlueButton = withStyles({\r\n    root: {\r\n        backgroundColor: blue[400],\r\n        '&:hover': {\r\n            backgroundColor: blue[500]\r\n        }\r\n    }\r\n})(Button)","/* \r\n    filename: Home.js \r\n    description: home view which shows buttons to join or create a room\r\n*/\r\nimport React from 'react'\r\nimport './Home.css'\r\nimport { Headset, PlayArrowOutlined } from '@material-ui/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport {GreenButton, BlueButton} from '../Buttons'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"header-home\" >\r\n                <span>\r\n                    logo\r\n                </span>\r\n                <h1 style={{ fontSize: '3rem', fontWeight: '400' }}>POGCHAMP!!</h1>\r\n            </div>\r\n\r\n            <p className=\"details\">Select a room to join or host your own! 'requires spotify premium' </p>\r\n\r\n            <div className=\"button-select\">\r\n                <div className='btn-group'>\r\n                    <Link to='/join'>\r\n                        <GreenButton\r\n                            startIcon={<PlayArrowOutlined style={{ fontSize: '40px' }} />}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ borderRadius: '30px', fontSize: '15px', fontWeight: '700' }}\r\n                            size=\"large\"\r\n                        >\r\n                            Join\r\n                        </GreenButton>\r\n                    </Link>\r\n                </div>\r\n                <div className='btn-group'>\r\n                    <Link to='/host'>\r\n                        <BlueButton\r\n                            startIcon={<Headset style={{ fontSize: '35px' }} />}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            style={{ borderRadius: '30px', fontSize: '15px', fontWeight: '700' }}\r\n                            size=\"large\">\r\n                            Host Room\r\n                        </BlueButton>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","/* \r\n    filename: Host.js \r\n    description: Allows user to log in to spotify and host their very own room\r\n*/\r\nimport React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { TextField, Checkbox, FormControlLabel } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport { withStyles } from '@material-ui/core'\r\nimport './Host.css'\r\nimport { GreenButton, BlueButton } from '../Buttons'\r\n\r\nconst TextStyled = withStyles({\r\n    root: {\r\n        '& input:valid + fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '&:hover fieldset': {\r\n                borderColor: green[400],\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: green[400],\r\n            }\r\n        },\r\n        '& .MuiFormLabel-root': {\r\n            color: 'grey'\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            color: 'white'\r\n        },\r\n        '& .MuiFormLabel-root.Mui-focused': {\r\n            color: green[400],\r\n\r\n        }\r\n    }\r\n})(TextField)\r\n\r\nconst CustomCheckBox = withStyles({\r\n    root: {\r\n        color: green[400],\r\n\r\n    }\r\n})(Checkbox)\r\n\r\n\r\n\r\nconst Host = () => {\r\n    const [session, setSession] = useState(null)\r\n    const [allowQueue, setAllowQueue] = useState(false)\r\n    const [allowSkip, setAllowSkip] = useState(false)\r\n    const [allowPlayPause, setAllowPlayPause] = useState(false)\r\n    const [votesToSkip, setVotesToSkip] = useState(1)\r\n    const [roomPassCode, setRoomPassCode] = useState('')\r\n    const [usePassCode, setUsePassCode] = useState(false)\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        const getRoom = async () => {\r\n            const response = await fetch('/api/createRoom', {\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            })\r\n            const data = await response.json()\r\n            setSession(data.room)\r\n        }\r\n        getRoom()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    //gets spotify redirect url\r\n    const getSpotifyLogin = async () => {\r\n        const getSpotifyLogin = await fetch('/spotify/getAuthUrl', { credentials: 'include' })\r\n        const spotifyLogin = await getSpotifyLogin.json()\r\n        window.location.assign(spotifyLogin.url)\r\n    }\r\n\r\n    const createRoom = async () => {\r\n        //sends a request to the server to create a new room\r\n        const isAuthenticated = await fetch('/spotify/isAuthenticated', {\r\n            credentials: 'include'\r\n        })\r\n        const authData = await isAuthenticated.json()\r\n\r\n        console.log(authData)\r\n\r\n        //if something went wrong and the user isn't logged in or user tokens are invalid they'll need to login\r\n        if (!authData.authenticated) {\r\n            getSpotifyLogin()\r\n        } else {\r\n        //if not then just create a room and send them to it\r\n            const data = {\r\n                votesToSkip:votesToSkip,\r\n                usersCanQueue: allowQueue,\r\n                usersCanPlayPause: allowPlayPause,\r\n                usersCanSkip: allowSkip,\r\n                override: session != null,\r\n                roomPassword: roomPassCode,\r\n                setPassword: usePassCode\r\n            }\r\n\r\n            const res = await fetch('/api/createRoom', {\r\n                method: \"POST\",\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n\r\n            const json = await res.json()\r\n            console.log(json.Room)\r\n            window.localStorage.setItem('code',json.Room.code)\r\n            window.location.href = `/room/${json.Room.code}`\r\n        }\r\n    }\r\n    //shows that the user already has an active session going \r\n    const returnToRoom = async () => {\r\n        //redirect user back to old room \r\n        const isAuthenticated = await fetch('/spotify/isAuthenticated', {\r\n            credentials: 'include'\r\n        })\r\n        const data = await isAuthenticated.json()\r\n        if(!data.authenticated){\r\n            getSpotifyLogin()\r\n        }else{       \r\n            window.localStorage.setItem('code',session.code)\r\n            window.location = `/room/${session.code}`\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"select-options\">\r\n                <div className=\"rejoin-room\">\r\n                    {session != null && <BlueButton variant=\"contained\" color=\"secondary\" size=\"large\" onClick={returnToRoom}>Re-Join: {session.code}</BlueButton>}\r\n                </div>\r\n\r\n                <GreenButton variant=\"contained\" color=\"primary\" size=\"large\" onClick={createRoom}> Create New Room </GreenButton>\r\n                <div className=\"create-new-room\">\r\n                    <TextStyled onChange={(e) => setVotesToSkip(e.target.value)} variant=\"outlined\" defaultValue={votesToSkip} required={true} type=\"number\" label=\"Vote required to skip\" inputProps={{ style: { textAlign: 'center' } }} />\r\n                    <div>\r\n                        <div className=\"options\">\r\n                            <FormControlLabel\r\n                                control={<CustomCheckBox color=\"default\" onClick={() => setAllowQueue(!allowQueue)} />}\r\n                                label=\"Allow users to queue music\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<CustomCheckBox color=\"default\" onClick={() => setAllowSkip(!allowSkip)} />}\r\n                                label=\"Allow users to skip songs\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<CustomCheckBox color=\"default\" onClick={() => setAllowPlayPause(!allowPlayPause)} />}\r\n                                label=\"Allow users to Play/Pause music\"\r\n                            />\r\n                            <FormControlLabel \r\n                                control = {<CustomCheckBox color=\"default\" onClick={()=> setUsePassCode(!usePassCode)}/>}\r\n                                label=\"Set Room Password\"\r\n                            />\r\n                            {usePassCode == true && <TextStyled id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" style={{width:\"100%\"}} onChange={(e) => setRoomPassCode(e.target.value)}/>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Host\r\n","/* \r\n    filename: Join.js \r\n    description: Allows user to input code and join a room\r\n*/\r\nimport { useState } from 'react'\r\nimport { TextField, withStyles, FormHelperText } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport { GreenButton } from '../Buttons'\r\nimport './Join.css'\r\n\r\nconst TextStyled = withStyles({\r\n    root: {\r\n        '& input:valid + fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '&:hover fieldset': {\r\n                borderColor: green[400],\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: green[400],\r\n            }\r\n        },\r\n        '& .MuiFormLabel-root': {\r\n            color: 'grey'\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            color: 'white'\r\n        },\r\n        '& .MuiFormLabel-root.Mui-focused': {\r\n            color: green[400],\r\n        }\r\n    }\r\n})(TextField)\r\n\r\n\r\nconst Create = () => {\r\n    const [error, setError] = useState(false)\r\n    const [helperText, setHelperText] = useState('')\r\n    const [code, setCode] = useState('')\r\n    const [password,setPassword] = useState('')\r\n\r\n    const onRoomJoin = async (e) => {\r\n        console.log(code)\r\n        const data = {code,password}\r\n        // const res = await fetch(`/api/getRoom/${code}`)\r\n        const res = await fetch('/api/checkPassword',{\r\n            method:\"POST\",\r\n            credentials:\"include\",\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n\r\n        if (res.status === 404) {\r\n            setError(true)\r\n            setHelperText('invalid room code/password')\r\n            e.target.value=''\r\n        }\r\n        if(res.status===200){\r\n            window.localStorage.setItem('code',code)\r\n            window.location = `/room/${code}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container join-container\">\r\n            <TextStyled style={{padding:'0 0 15px 0'}} error={error} variant=\"outlined\" label=\"Input Room Code\" value={code} onChange={(e)=>setCode(e.target.value.toUpperCase())}/>\r\n            <TextStyled style={{padding:'0 0 0 0'}} error={error} variant=\"outlined\" label=\"Input Password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\r\n            \r\n            <FormHelperText error={error}>{helperText}</FormHelperText>\r\n            <div className=\"bottom\">\r\n                <GreenButton onClick={onRoomJoin} size=\"large\" className=\"btn\">JOIN</GreenButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create\r\n","/* \r\n    filename: Header.js\r\n    description: Header which holds the title\r\n*/\r\n\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div style={styles.header} href=\"/\">\r\n            <span style={styles.span}><Link to=\"/\" style={styles.a}>Logo</Link></span>\r\n            <h2> <Link to=\"/\" style={styles.a}>POGCHAMP</Link></h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    },\r\n    span: {\r\n        paddingRight: '15px',\r\n        paddingLeft: '100px',\r\n    },\r\n    a:{\r\n        textDecoration:'none',\r\n        color:'white',\r\n        fontSize:'35px'\r\n    }\r\n}\r\n\r\nexport default Header\r\n","/* \r\n    filename: Footer.js\r\n    description: Footer component, contains information\r\n*/\r\n\r\nimport React from 'react'\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"layout-footer\">\r\n            <div className=\"footer-info\">\r\n                <a href='/'> Terms of use </a>\r\n                <a href='/'> Privacy Policy </a>\r\n                <a href='https://github.com/SteveF42/PogChamp'> GitHub </a>\r\n            </div>\r\n            <span>\r\n                <p>Spotify is copyright Spotify AB and is not affiliated with PogChamp</p>\r\n            </span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","/* \r\n    filename: MusicPlayer.js\r\n    description: Music player component which holds control over the given track\r\n        and what is currently playing\r\n*/\r\n\r\nimport { useState } from 'react'\r\nimport { Button, LinearProgress } from '@material-ui/core'\r\nimport { Pause, PlayArrow, SkipNext } from '@material-ui/icons'\r\n\r\n\r\nconst MusicPlayer = ({ currentSong, playSong, pauseSong, skipSong, roomInfo }) => {\r\n    const [isPlaying, setIsPlaying] = useState(currentSong === undefined ? false : currentSong.is_playing)\r\n    const [voted, setVoted] = useState(false)\r\n    const playOrPause = async () => {\r\n        isPlaying ? pauseSong() : playSong();\r\n        setIsPlaying(!isPlaying)\r\n    }\r\n    const styles = {\r\n        playPause: {\r\n            color: (roomInfo.usersCanPlayPause || roomInfo.isHost) ? 'white' : 'grey'\r\n        },\r\n        skip: {\r\n            color: (roomInfo.usersCanSkip || roomInfo.isHost) ? 'white' : 'grey'\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {currentSong !== undefined &&\r\n                <div className=\"musicPlayer\">\r\n                    <div className=\"leftHalf\">\r\n                        <img src={currentSong.item.album.images[1].url} height=\"200\" width=\"200\" alt=\"none\" placeholder=\"img\"></img>\r\n                    </div>\r\n                    <div className=\"rightHalf\">\r\n                        <div className=\"songInfo\">\r\n                            <h3 className=\"songTitle\">\r\n                                {currentSong.item.name}\r\n                            </h3>\r\n                            <div className=\"songArtists\">\r\n                                {currentSong.item.artists.map(obj => <p className=\"artists\" key={obj.id}>{obj.name}</p>)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"audioController\">\r\n                            <div className='trackButtons'>\r\n                                <div className=\"pauseOrPlay\">\r\n                                    <Button disabled={!(roomInfo.usersCanPlayPause || roomInfo.isHost)} onClick={playOrPause} startIcon={isPlaying ? <Pause style={styles.playPause} /> : <PlayArrow style={styles.playPause} />} />\r\n                                </div>\r\n                                <div className=\"skip\">\r\n                                    <p></p>\r\n                                    <Button style={{ color: 'white' }} disabled={!(roomInfo.usersCanSkip || roomInfo.isHost)} startIcon={<SkipNext style={styles.skip} />}\r\n                                        onClick={() => {\r\n                                            skipSong(window.localStorage.getItem('code'), voted); setIsPlaying(true); setVoted(!voted);\r\n                                        }}>\r\n                                        {roomInfo.currentVotes} / {roomInfo.votesToSkip}\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"trackProgress\">\r\n                                <LinearProgress variant=\"determinate\" value={(currentSong.progress_ms / currentSong.item.duration_ms) * 100}></LinearProgress>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default MusicPlayer\r\n","/* \r\n    filename: PopUp.js\r\n    description: allows host to alter room settings\r\n*/\r\n\r\nimport { useState } from 'react'\r\nimport { TextField, Checkbox, FormControlLabel, withStyles } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport { GreenButton } from '../Buttons'\r\n\r\n\r\nconst TextStyled = withStyles({\r\n    root: {\r\n        '& input:valid + fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '&:hover fieldset': {\r\n                borderColor: green[400],\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: green[400],\r\n            }\r\n        },\r\n        '& .MuiFormLabel-root': {\r\n            color: 'white'\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            color: 'white'\r\n        },\r\n        '& .MuiFormLabel-root.Mui-focused': {\r\n            color: green[400],\r\n\r\n        }\r\n    }\r\n})(TextField)\r\n\r\nconst CustomCheckBox = withStyles({\r\n    root: {\r\n        color: green[400],\r\n\r\n    }\r\n})(Checkbox)\r\n\r\n\r\n\r\n\r\nconst PopUp = ({ usersCanSkip, usersCanQueue, usersCanPlayPause, hidePopUp, votesToSkip, props }) => {\r\n    const [canPlayPause, setCanPlayPause] = useState(usersCanPlayPause)\r\n    const [canQueue, setCanQueue] = useState(usersCanQueue)\r\n    const [canSkip, setCanSkip] = useState(usersCanSkip)\r\n    const [skipVotes, setSkipVotes] = useState(votesToSkip)\r\n\r\n\r\n\r\n    const onClick = async (e) => {\r\n        //update the room info\r\n        await fetch('/api/updateRoom', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                usersCanPlayPause: canPlayPause,\r\n                usersCanQueue: canQueue,\r\n                usersCanSkip: canSkip,\r\n                votesToSkip: skipVotes,\r\n                updatePermissions: true\r\n            })\r\n        })\r\n        hidePopUp(e)\r\n    }\r\n\r\n    return (\r\n        <div className=\"popUp\" onClick={hidePopUp} style={props}>\r\n            <div className=\"popUpContent\">\r\n                <TextStyled onChange={(e) => setSkipVotes(e.target.value)} variant=\"outlined\" defaultValue={skipVotes} required={true} type=\"number\" label=\"Vote required to skip\" inputProps={{ style: { textAlign: 'center' } }} />\r\n                <FormControlLabel control={<CustomCheckBox color=\"default\" checked={canPlayPause} onChange={() => setCanPlayPause(!canPlayPause)} />} label=\"Allow users to play/pause\" />\r\n                <FormControlLabel control={<CustomCheckBox color=\"default\" checked={canSkip} onChange={() => setCanSkip(!canSkip)} />} label=\"Allow users to skip\" />\r\n                <FormControlLabel control={<CustomCheckBox color=\"default\" checked={canQueue} onChange={() => setCanQueue(!canQueue)} />} label=\"Allow users to queue music\" />\r\n                <div className=\"updateRoomButton\">\r\n                    <GreenButton className=\"roomUpdate\" onClick={onClick}>Update Room</GreenButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopUp\r\n","/* \r\n    filename: utils.js \r\n    description: helper functions that get called throughout room component\r\n*/\r\n\r\n//pauses the song\r\nexport const pauseSong = async (code) => {\r\n    console.log('pause')\r\n\r\n    const res = await fetch('/spotify/pause', {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            code: code\r\n        })\r\n    })\r\n    if (res.status !== 200) {\r\n        console.log(res)\r\n    }\r\n}\r\n\r\n//resumes playback\r\nexport const playSong = async (code,params = {context_uri:'',offset:0}) => {\r\n    console.log('play')\r\n\r\n    const res = await fetch('/spotify/play', {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            code: code,\r\n            context_uri: params.context_uri,\r\n            offset:{\r\n                position: params.offset\r\n            }\r\n        })\r\n    })\r\n    if (res.status !== 200) {\r\n        console.log(res)\r\n    }\r\n}\r\n\r\nexport const skipSong = async (code,voted=false) => {\r\n    console.log('skip')\r\n\r\n    const res = await fetch('/spotify/skip', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            code,\r\n            voted\r\n        })\r\n    })\r\n    if (res.status !== 200) {\r\n        console.log(res)\r\n    }\r\n}","/* \r\n    filename: Song.js \r\n    description: Song component which gets mapped to from an array\r\n*/\r\n\r\nimport { PlayArrow, QueueMusic } from '@material-ui/icons'\r\nimport { Button } from '@material-ui/core'\r\nimport { playSong } from './utils'\r\n\r\nconst Song = ({ bandaid = false, imgSrc, artists, songName, songLength, dimensions, context_uri, trackNumber, spotifyTrack, displayButtons }) => {\r\n\r\n    const onSongEvent = () => {\r\n        const params = {\r\n            context_uri,\r\n            offset: trackNumber - 1\r\n        }\r\n        playSong(window.localStorage.getItem('code'), params)\r\n    }\r\n\r\n    const addToQueue = async () => {\r\n        //adds song to queue through spotify\r\n        await fetch('/spotify/addToQueue', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                uri: spotifyTrack,\r\n                code: window.localStorage.getItem('code')\r\n            })\r\n        })\r\n\r\n        //adds song to queue on api\r\n        const artistsArr = []\r\n        for (let i of artists) {\r\n            artistsArr.push(i.name)\r\n        }\r\n\r\n\r\n        await fetch('/api/updateRoom', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                queueSong: true,\r\n                imgSrc,\r\n                artists: artistsArr,\r\n                songName,\r\n                songLength,\r\n                context_uri,\r\n                trackNumber,\r\n                spotifyTrack,\r\n                code: window.localStorage.getItem('code')\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"song\">\r\n            <div className=\"song_leftSide\">\r\n                {displayButtons &&\r\n                    <>\r\n                        <Button onClick={onSongEvent} startIcon={<PlayArrow />}></Button>\r\n                        <Button onClick={addToQueue} startIcon={<QueueMusic />}></Button>\r\n                    </>\r\n                }\r\n                <img src={imgSrc} {...dimensions} alt={'noThumbnail.jpg'}></img>\r\n            </div>\r\n\r\n            <div className=\"songDetails\">\r\n                <div className=\"artists\">\r\n\r\n                    <p>artists:</p>\r\n                    {artists.map(item => {\r\n                        return (\r\n                            <div key={bandaid ? item : item.name} style={{width:'100%',textAlign:'center'}}>\r\n                                {bandaid ?\r\n                                    <p>{item}</p>\r\n                                    :\r\n                                    <p>{item.name}</p>\r\n                                }\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"songName\">\r\n                    <p>Song:</p>\r\n                    <p>{songName}</p>\r\n                </div>\r\n                <div className=\"songLength\">\r\n\r\n                    <p>Duration:</p>\r\n                    <p>{(songLength / 1000 / 60).toFixed(2)}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song\r\n","/* \r\n    filename: SearchSong.js\r\n    description: Allows user to search spotify API for songs\r\n*/\r\n\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport {  ArrowBack } from '@material-ui/icons'\r\nimport { GreenButton } from '../Buttons'\r\nimport { useTransition, animated } from 'react-spring'\r\nimport Song from './Song'\r\n\r\nconst SearchComponent = ({searchItems, changeSearchView,setQuaryParams,searchSong}) => {\r\n    const searchAnimation = useTransition(searchItems, item => item.id, {\r\n        from: { transform: 'translate3d(0,120px,0) scale(0)', opacity: 0 },\r\n        enter: item => async (next, cancel) => {\r\n            await next({ transform: 'translate3d(0,0,0) scale(1)', opacity: 1 })\r\n        },\r\n        leave: { display: 'none' },\r\n        trail: 125,\r\n    })\r\n\r\n    return (\r\n        <div className=\"searchSong\">\r\n            <div className=\"searchInput\">\r\n                <Button onClick={changeSearchView} startIcon={<ArrowBack />}>back</Button>\r\n                <TextField label=\"Search\" onChange={setQuaryParams} />\r\n                <GreenButton onClick={searchSong}>Submit</GreenButton>\r\n            </div>\r\n            <div className=\"searchItems\">\r\n                {searchAnimation.map(({ item, key, props }) => {\r\n                    return (\r\n                        <animated.div key={key} style={props} >\r\n                            <Song\r\n                                key={item.id}\r\n                                artists={item.artists}\r\n                                songName={item.name}\r\n                                imgSrc={item.album.images[2].url}\r\n                                songLength={item.duration_ms}\r\n                                dimensions={{ height: 64, width: 64 }}\r\n                                context_uri={item.album.uri}\r\n                                trackNumber={item.track_number}\r\n                                spotifyTrack={item.uri}\r\n                                displayButtons={true} />\r\n                        </animated.div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchComponent","/* \r\n    filename: SongQueue.js \r\n    description: shows the current song queue of whats next\r\n*/\r\nimport { Button } from '@material-ui/core'\r\nimport { Add } from '@material-ui/icons'\r\nimport { useTransition, animated,useSpring } from 'react-spring'\r\nimport {useState} from 'react'\r\nimport Song from './Song'\r\n\r\nconst SongQueue = ({ changeSearchView, songQueue }) => {\r\n    const [bounce, setBounce] = useState(false)\r\n\r\n    const queueAnimation = useTransition(songQueue, item => item._id, {\r\n        from: { transform: 'translate3d(0,120px,0) scale(0)', opacity: 0 },\r\n        enter: item => async (next, cancel) => {\r\n            await next({ transform: 'translate3d(0,0,0) scale(1)', opacity: 1 })\r\n        },\r\n        leave: item => async (next, cancel) => { await next({ transform: 'translate3d(0,-25px,0) scale(1)', opacity: 0, position:'absolute'})},\r\n        trail: 75,\r\n    })\r\n    const bounceUp = useSpring({\r\n        from: {transform:\"translate3d(0,0,0)\"},\r\n        to:{transform: bounce ? 'translate3d(0,-64,0)' : ''}\r\n    })\r\n    const clickEvent = e =>{\r\n        changeSearchView(e)\r\n        setBounce(false)\r\n        setBounce(true)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"songQueue\">\r\n            <Button onClick={changeSearchView} style={{ color: 'white' }} startIcon={<Add />} >Add Song</Button>\r\n            {queueAnimation.map(({ item, key, props }) => {\r\n                return (\r\n                    <animated.div key={key} style={bounceUp, props}>\r\n                        <Song bandaid={true}\r\n                            key={item._id}\r\n                            artists={item.artists}\r\n                            songName={item.songName}\r\n                            imgSrc={item.imgSrc}\r\n                            songLength={item.songLength}\r\n                            dimensions={{ height: 64, width: 64 }}\r\n                            context_uri={item.context_uri}\r\n                            trackNumber={item.trackNumber}\r\n                            displayButtons={false} />\r\n                    </animated.div>\r\n                )\r\n            })}\r\n            {songQueue.length <= 0 &&\r\n                <p>No songs in queue</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongQueue","/* \r\n    filename: QueueView.js\r\n    description: show the current song queue of the room and allows user to search spotify api\r\n*/\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport SearchSong from './SearchSong'\r\nimport SongQueue from './SongQueue'\r\n\r\nconst QueueView = ({ Queue, code }) => {\r\n    //map of objects to be filled from songs from spotify\r\n    const [songQueue, setSongQueue] = useState(Queue === undefined ? [] : [...Queue])\r\n    const [searchItems, setSearchItems] = useState(JSON.parse(window.localStorage.getItem('songSearch')) || [])\r\n    const [queryParams, setQueryParams] = useState('')\r\n    const [searchView, setSearchView] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        if (Queue !== undefined) {\r\n            setSongQueue([...Queue])\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n    }, [Queue])\r\n\r\n\r\n\r\n    const searchSong = async () => {\r\n        console.log(queryParams)\r\n        const response = await fetch('/spotify/searchSpotify', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                query: queryParams,\r\n                code,\r\n                type: 'track'\r\n            })\r\n        })\r\n        const data = await response.json()\r\n        if (data.tracks !== undefined) {\r\n            setSearchItems([...data.tracks.items])\r\n            window.localStorage.setItem('songSearch', [JSON.stringify(data.tracks.items)])\r\n        }\r\n    }\r\n\r\n    const changeSearchView = ()=>{\r\n        setSearchView(!searchView)\r\n    }\r\n    const updateQuaryParams = (e)=>{\r\n        setQueryParams(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {searchView ?\r\n                <SongQueue changeSearchView={changeSearchView} songQueue={songQueue}/>\r\n                :\r\n                <SearchSong searchItems={searchItems} changeSearchView={changeSearchView} setQuaryParams={updateQuaryParams} searchSong={searchSong}/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QueueView\r\n","/* \r\n    filename: Room.js\r\n    description: main room component that allows users to join\r\n*/\r\n\r\nimport { useMeasure } from 'react-use'\r\nimport { useEffect, useState } from 'react'\r\nimport React from 'react'\r\nimport { Switch, FormControlLabel } from '@material-ui/core'\r\nimport { FadeMenu, BlueButton } from '../Buttons'\r\nimport { Transition } from 'react-spring/renderprops'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport MusicPlayer from './MusicPlayer'\r\nimport PopUp from './PopUp'\r\nimport QueueView from './QueueView'\r\nimport { pauseSong, playSong, skipSong } from './utils'\r\nimport './Room.css'\r\n\r\nconst Room = () => {\r\n    const code = window.localStorage.getItem('code') || window.location.pathname.substring(window.location.pathname.lastIndexOf('/') + 1)\r\n    const [availableDevices, setAvailableDevices] = useState()\r\n    const [displayPopUp, setDisplayPopUp] = useState(false)\r\n    const [currentSong, setCurrentSong] = useState()\r\n    const [view, setView] = useState(false)\r\n    const [roomInfo, setRoomInfo] = useState({ isHost: false })\r\n    const [contentHeight, setContentHeight] = useState(0)\r\n    const [musicViewHeight, setMusicViewHeight] = useState(0)\r\n    const [queueRef, queueHeight] = useMeasure()\r\n    const [musicRef, musicHeight] = useMeasure()\r\n\r\n    const containerResize = useSpring({\r\n        to: { height: view ? contentHeight : musicViewHeight }\r\n    })\r\n\r\n\r\n    //when component mounts, it sets a timer to poll with the server\r\n    useEffect(() => {\r\n        window.localStorage.setItem('code', code)\r\n        getCurrentSong()\r\n        getRoomInfo().then((roomInfo) => {\r\n            if (roomInfo.isHost) {\r\n                getAvailableDevices()\r\n            } else {\r\n                setAvailableDevices({ isHost: false })\r\n            }\r\n        })\r\n\r\n        //keeps a constant poll to the server\r\n        const timerID = setInterval(() => {\r\n            getCurrentSong()\r\n            getRoomInfo()\r\n            // if(roomInfo.isHost){\r\n            //     fetch('/spotify/isAuthenticated')\r\n            // }\r\n        }, 2500)\r\n\r\n        return () => {\r\n            clearInterval(timerID)\r\n            //if the host leaves then clean up the queue\r\n            fetch('/api/clearQueue', { method: 'PUT' })\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setContentHeight(queueHeight.height)\r\n        setMusicViewHeight(musicHeight.height)\r\n    }, [queueHeight, musicHeight])\r\n\r\n    const getAvailableDevices = async () => {\r\n        const res = await fetch(`/spotify/getAvailableDevices`)\r\n        const data = await res.json()\r\n        if (res.status === 200) {\r\n            setAvailableDevices({ ...data, isHost: true })\r\n        }\r\n    }\r\n\r\n    //gets the roomInfo for other users\r\n    const getRoomInfo = async () => {\r\n        const res = await fetch(`/api/getRoom/${code}`)\r\n        const data = await res.json()\r\n        if (res.status === 200) {\r\n            setRoomInfo(data.roomInfo)\r\n            return data.roomInfo\r\n        }\r\n    }\r\n\r\n    //gets the currently active song\r\n    const getCurrentSong = async () => {\r\n        const res = await fetch('/spotify/currentlyPlaying', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                code: code\r\n            })\r\n        })\r\n\r\n        if (res.status !== 200) {\r\n            console.log('No Current song playing')\r\n            return\r\n            //access token expired\r\n        } else if (res.status === 401) {\r\n            console.log('access denied')\r\n            return\r\n        }\r\n\r\n        const data = await res.json()\r\n        if (currentSong === undefined || currentSong.item !== data.song.item) {\r\n            if (data.song !== null && data.song.item != null) {\r\n                setCurrentSong(data.song)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const playAnimation = () => {\r\n        const elements = document.getElementsByClassName('attachAnimation')\r\n        for (let item of elements) {\r\n            item.classList.remove('playAnimation')\r\n            void item.offsetWidth\r\n            item.classList.add('playAnimation')\r\n        }\r\n    }\r\n\r\n    //lets the user choose a different device to output from\r\n    const startPlaybackOnDevice = async (e) => {\r\n        const deviceID = e.target.id\r\n        if (deviceID === '') return\r\n        const body = {\r\n            deviceID\r\n        }\r\n        console.log(body);\r\n        const res = await fetch('/spotify/playNewDevice', {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n        console.log(res);\r\n        if (currentSong == null || currentSong.is_playing === false) {\r\n            playSong(code)\r\n            getCurrentSong()\r\n        }\r\n    }\r\n    const hidePopUp = (e) => {\r\n        const className = e.target.className\r\n        if (className === 'popUp' || className === 'MuiButton-label') {\r\n            setDisplayPopUp(!displayPopUp)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Transition keys={displayPopUp} items={displayPopUp} from={{ opacity: 0 }} enter={{ opacity: 1 }} leave={{ opacity: 0 }} config={{duration:200}}>\r\n                {(displayPopUp) => displayPopUp && ((props) => (\r\n                            <PopUp\r\n                                props={props}\r\n                                hidePopUp={hidePopUp}\r\n                                usersCanPlayPause={roomInfo.usersCanPlayPause}\r\n                                usersCanQueue={roomInfo.usersCanQueue}\r\n                                usersCanSkip={roomInfo.usersCanSkip}\r\n                                votesToSkip={roomInfo.votesToSkip} />\r\n                    ))}\r\n            </Transition>\r\n            <div className=\"roomContainer\">\r\n\r\n                <div className=\"topHalf\">\r\n                    <div className=\"topItems\">\r\n                        <span className=\"roomCode\">\r\n                            <h3 style={{ fontSize: \"1.58rem\" }}>Code: {window.localStorage.getItem('code')}</h3>\r\n                        </span>\r\n                        <div className=\"queueSwitch\">\r\n                            <FormControlLabel\r\n                                labelPlacement=\"top\"\r\n                                control={\r\n                                    <Switch\r\n                                        size='medium'\r\n                                        value={view}\r\n                                        onChange={() => {\r\n                                            setView(!view)\r\n                                            playAnimation()\r\n\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label={<p className=\"playAnimation\" style={{ margin: '0' }}> {view ? 'Queue' : 'Music'}</p>}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <animated.div className=\"musicContainer\" style={containerResize}>\r\n                        {/* switches between the music view or the queue view */}\r\n                        <Transition\r\n                            items={view}\r\n                            from={{ opacity: 0 }}\r\n                            enter={{ opacity: 1 }}\r\n                            leave={{ display: 'none' }}\r\n                            delay={200}\r\n                            config={{ duration: 700 }}\r\n                        >\r\n                            {(view) => (\r\n                                !view\r\n                                    ? props =>\r\n                                        <div style={props} ref={musicRef}>\r\n                                            <MusicPlayer roomInfo={roomInfo} currentSong={currentSong} pauseSong={() => pauseSong(code)} playSong={() => playSong(code)} skipSong={skipSong} />\r\n                                            <div className=\"bottomButtons\">\r\n                                                {(availableDevices !== undefined && roomInfo.isHost) &&\r\n                                                    <div className=\"availableDevices\">\r\n                                                        <FadeMenu menuItems={availableDevices.devices} label=\"Listening Device\" startPlaybackOnDevice={startPlaybackOnDevice}></FadeMenu>\r\n                                                    </div>\r\n                                                }\r\n                                                {roomInfo.isHost &&\r\n                                                    <div className=\"roomSettings\">\r\n                                                        <BlueButton style={{ marginLeft: '10px' }} onClick={() => setDisplayPopUp(!displayPopUp)}>Room Settings</BlueButton>\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    : props =>\r\n                                        <div style={props} ref={queueRef}>\r\n                                            <QueueView Queue={roomInfo.songQueue} code={code} />\r\n                                        </div>\r\n                            )}\r\n                        </Transition>\r\n                    </animated.div>\r\n                </div>\r\n                <div className=\"bottomHalf\">\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Room\r\n","/*\r\n    FileName: AuthCallback.js\r\n    description: only used to receieve a call back after logging into spotify\r\n        clears the window history to hide the codes receieved\r\n*/\r\n\r\nimport {useEffect} from 'react'\r\n\r\nconst AuthCallback = () => {\r\n\r\n    useEffect(() => {\r\n        //parse url params\r\n        const callback = async ()=>{\r\n\r\n            const urlParams = new URLSearchParams(window.location.search);\r\n            \r\n            if(urlParams.has('code')){\r\n                const res = await fetch('/spotify/callback',{\r\n                    method:'POST',\r\n                    credentials:'include',\r\n                    headers:{\r\n                        'Content-Type':'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        code:urlParams.get('code')\r\n                    })\r\n                })\r\n                if(res.status===200){\r\n                    window.history.replaceState(null,null,'/host')\r\n                    window.location = '/host'\r\n                }\r\n            }else if(urlParams.has('error')){\r\n                window.history.go(-2)\r\n            }\r\n        }\r\n        callback()        \r\n    }, [])\r\n    \r\n    return (null)\r\n}\r\n\r\nexport default AuthCallback\r\n","import Home from './components/Home/Home'\r\nimport Host from './components/Host/Host'\r\nimport Join from './components/Join/Join'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport Room from './components/Room/Room'\r\nimport AuthCallback from './components/AuthCallback'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport './App.css'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <div className='App main-container'>\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route path='/' exact component={Home} />\r\n          <Route path='/join' exact component={Join} />\r\n          <Route path='/host' component={Host} />\r\n          <Route path='/authCallback' component={AuthCallback} />\r\n          <Route path='/room/:id' component={Room} />\r\n          <Route path='/' render={()=>{\r\n            return(\r\n              <p>Not Found 404</p>\r\n            )\r\n          }} />\r\n        </Switch>\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App style={{height:'100%'}}/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}