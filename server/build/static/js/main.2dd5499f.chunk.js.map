{"version":3,"sources":["components/Buttons.js","components/Home/Home.js","components/Host/Host.js","components/Join/Join.js","components/Header.js","components/Footer.js","components/Room/MusicPlayer.js","components/Room/PopUp.js","components/Room/utils.js","components/Room/Song.js","components/Room/SearchSong.js","components/Room/SongQueue.js","components/Room/QueueView.js","components/Room/Room.js","components/AuthCallback.js","App.js","index.js"],"names":["FadeMenu","menuItems","label","startPlaybackOnDevice","useState","anchorEl","setAnchorEl","menu","React","createRef","handleClose","e","GreenButton","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","TransitionComponent","Fade","ref","undefined","map","obj","MenuItem","name","withStyles","root","backgroundColor","green","Button","BlueButton","blue","Home","className","style","fontSize","fontWeight","to","startIcon","PlayArrowOutlined","variant","color","borderRadius","size","Headset","TextStyled","borderColor","borderBottomColor","TextField","CustomCheckBox","Checkbox","Host","session","setSession","allowQueue","setAllowQueue","allowSkip","setAllowSkip","allowPlayPause","setAllowPlayPause","votesToSkip","setVotesToSkip","useEffect","a","fetch","credentials","headers","response","json","data","room","getRoom","getSpotifyLogin","spotifyLogin","window","location","assign","url","createRoom","isAuthenticated","authData","console","log","authenticated","usersCanQueue","usersCanPlayPause","usersCanSkip","override","method","body","JSON","stringify","res","Room","localStorage","setItem","code","href","returnToRoom","onChange","target","value","defaultValue","required","type","inputProps","textAlign","FormControlLabel","control","Create","error","setError","helperText","setHelperText","setCode","onRoomJoin","status","toUpperCase","FormHelperText","styles","header","width","display","justifyContent","alignItems","textDecoration","span","paddingRight","paddingLeft","Header","Footer","MusicPlayer","currentSong","playSong","pauseSong","skipSong","roomInfo","is_playing","isPlaying","setIsPlaying","voted","setVoted","playOrPause","playPause","isHost","skip","src","item","album","images","height","alt","placeholder","artists","disabled","Pause","PlayArrow","SkipNext","getItem","currentVotes","LinearProgress","progress_ms","duration_ms","PopUp","hidePopUp","props","canPlayPause","setCanPlayPause","canQueue","setCanQueue","canSkip","setCanSkip","skipVotes","setSkipVotes","updatePermissions","checked","params","context_uri","offset","position","Song","bandaid","imgSrc","songName","songLength","dimensions","trackNumber","spotifyTrack","displayButtons","addToQueue","uri","artistsArr","i","push","queueSong","QueueMusic","toFixed","SearchComponent","searchItems","changeSearchView","setQuaryParams","searchSong","searchAnimation","useTransition","from","transform","opacity","enter","next","cancel","leave","trail","ArrowBack","key","div","track_number","SongQueue","songQueue","bounce","queueAnimation","_id","useSpring","Add","length","QueueView","Queue","setSongQueue","parse","setSearchItems","queryParams","setQueryParams","searchView","setSearchView","query","tracks","items","SearchSong","pathname","substring","lastIndexOf","availableDevices","setAvailableDevices","displayPopUp","setDisplayPopUp","setCurrentSong","view","setView","setRoomInfo","contentHeight","setContentHeight","musicViewHeight","setMusicViewHeight","useMeasure","queueRef","queueHeight","musicRef","musicHeight","containerResize","getCurrentSong","getRoomInfo","then","getAvailableDevices","timerID","setInterval","clearInterval","song","deviceID","keys","config","duration","labelPlacement","Switch","elements","document","getElementsByClassName","classList","remove","offsetWidth","add","playAnimation","margin","delay","devices","marginLeft","AuthCallback","urlParams","URLSearchParams","search","has","get","history","replaceState","go","callback","App","path","exact","component","Join","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2dd5499f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { green, blue } from '@material-ui/core/colors'\r\nimport { Button, Menu, MenuItem, withStyles, Fade } from '@material-ui/core'\r\nimport { useState } from 'react'\r\n\r\nexport const FadeMenu = ({ menuItems, label, startPlaybackOnDevice}) => {\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const menu = React.createRef()\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleClose = (e) => {\r\n        setAnchorEl(null)\r\n        startPlaybackOnDevice(e)\r\n    }\r\n    return (\r\n        <>\r\n            <GreenButton aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                {label}\r\n            </GreenButton>\r\n            <Menu\r\n                id=\"fade-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n                ref={menu}\r\n            >\r\n            {menuItems!==undefined && menuItems.map(obj => <MenuItem id={obj.id} key={obj.id} onClick={handleClose}>{obj.name}</MenuItem>)}\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport const GreenButton = withStyles({\r\n    root: {\r\n        backgroundColor: green[400],\r\n        '&:hover': {\r\n            backgroundColor: green[500]\r\n        }\r\n    }\r\n})(Button)\r\nexport const BlueButton = withStyles({\r\n    root: {\r\n        backgroundColor: blue[400],\r\n        '&:hover': {\r\n            backgroundColor: blue[500]\r\n        }\r\n    }\r\n})(Button)","import React from 'react'\r\nimport './Home.css'\r\nimport { Headset, PlayArrowOutlined } from '@material-ui/icons'\r\nimport { Link } from 'react-router-dom'\r\nimport {GreenButton, BlueButton} from '../Buttons'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"header-home\" >\r\n                <span>\r\n                    logo\r\n                </span>\r\n                <h1 style={{ fontSize: '3rem', fontWeight: '400' }}>POGCHAMP!!</h1>\r\n            </div>\r\n\r\n            <p className=\"details\">Select a room to join or host your own! 'requires spotify premium' </p>\r\n\r\n            <div className=\"button-select\">\r\n                <div className='btn-group'>\r\n                    <Link to='/join'>\r\n                        <GreenButton\r\n                            startIcon={<PlayArrowOutlined style={{ fontSize: '40px' }} />}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ borderRadius: '30px', fontSize: '15px', fontWeight: '700' }}\r\n                            size=\"large\"\r\n                        >\r\n                            Join\r\n                        </GreenButton>\r\n                    </Link>\r\n                </div>\r\n                <div className='btn-group'>\r\n                    <Link to='/host'>\r\n                        <BlueButton\r\n                            startIcon={<Headset style={{ fontSize: '35px' }} />}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            style={{ borderRadius: '30px', fontSize: '15px', fontWeight: '700' }}\r\n                            size=\"large\">\r\n                            Host Room\r\n                        </BlueButton>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { TextField, Checkbox, FormControlLabel } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport { withStyles } from '@material-ui/core'\r\nimport './Host.css'\r\nimport { GreenButton, BlueButton } from '../Buttons'\r\n\r\nconst TextStyled = withStyles({\r\n    root: {\r\n        '& input:valid + fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '&:hover fieldset': {\r\n                borderColor: green[400],\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: green[400],\r\n            }\r\n        },\r\n        '& .MuiFormLabel-root': {\r\n            color: 'grey'\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            color: 'white'\r\n        },\r\n        '& .MuiFormLabel-root.Mui-focused': {\r\n            color: green[400],\r\n\r\n        }\r\n    }\r\n})(TextField)\r\n\r\nconst CustomCheckBox = withStyles({\r\n    root: {\r\n        color: green[400],\r\n\r\n    }\r\n})(Checkbox)\r\n\r\n\r\n\r\nconst Host = () => {\r\n    const [session, setSession] = useState(null)\r\n    const [allowQueue, setAllowQueue] = useState(false)\r\n    const [allowSkip, setAllowSkip] = useState(false)\r\n    const [allowPlayPause, setAllowPlayPause] = useState(false)\r\n    const [votesToSkip, setVotesToSkip] = useState(1)\r\n\r\n\r\n    useEffect(() => {\r\n        const getRoom = async () => {\r\n            const response = await fetch('/api/createRoom', {\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            })\r\n            const data = await response.json()\r\n            setSession(data.room)\r\n        }\r\n        getRoom()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    //gets spotify redirect url\r\n    const getSpotifyLogin = async () => {\r\n        const getSpotifyLogin = await fetch('/spotify/getAuthUrl', { credentials: 'include' })\r\n        const spotifyLogin = await getSpotifyLogin.json()\r\n        window.location.assign(spotifyLogin.url)\r\n    }\r\n\r\n    const createRoom = async () => {\r\n        //sends a request to the server to create a new room\r\n        const isAuthenticated = await fetch('/spotify/isAuthenticated', {\r\n            credentials: 'include'\r\n        })\r\n        const authData = await isAuthenticated.json()\r\n\r\n        console.log(authData)\r\n\r\n        //if something went wrong and the user isn't logged in or user tokens are invalid they'll need to login\r\n        if (!authData.authenticated) {\r\n            getSpotifyLogin()\r\n        } else {\r\n        //if not then just create a room and send them to it\r\n            const data = {\r\n                votesToSkip:votesToSkip,\r\n                usersCanQueue: allowQueue,\r\n                usersCanPlayPause: allowPlayPause,\r\n                usersCanSkip: allowSkip,\r\n                override: session != null\r\n            }\r\n\r\n            const res = await fetch('/api/createRoom', {\r\n                method: \"POST\",\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n\r\n            const json = await res.json()\r\n            console.log(json.Room)\r\n            window.localStorage.setItem('code',json.Room.code)\r\n            window.location.href = `/room/${json.Room.code}`\r\n        }\r\n    }\r\n    //shows that the user already has an active session going \r\n    const returnToRoom = async () => {\r\n        //redirect user back to old room \r\n        const isAuthenticated = await fetch('/spotify/isAuthenticated', {\r\n            credentials: 'include'\r\n        })\r\n        const data = await isAuthenticated.json()\r\n        if(!data.authenticated){\r\n            getSpotifyLogin()\r\n        }else{       \r\n            window.localStorage.setItem('code',session.code)\r\n            window.location = `/room/${session.code}`\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"select-options\">\r\n                <div className=\"rejoin-room\">\r\n                    {session != null && <BlueButton variant=\"contained\" color=\"secondary\" size=\"large\" onClick={returnToRoom}>Re-Join: {session.code}</BlueButton>}\r\n                </div>\r\n\r\n                <GreenButton variant=\"contained\" color=\"primary\" size=\"large\" onClick={createRoom}> Create New Room </GreenButton>\r\n                <div className=\"create-new-room\">\r\n                    <TextStyled onChange={(e) => setVotesToSkip(e.target.value)} variant=\"outlined\" defaultValue={votesToSkip} required={true} type=\"number\" label=\"Vote required to skip\" inputProps={{ style: { textAlign: 'center' } }} />\r\n                    <div>\r\n                        <div className=\"options\">\r\n                            <FormControlLabel\r\n                                control={<CustomCheckBox color=\"default\" onClick={() => setAllowQueue(!allowQueue)} />}\r\n                                label=\"Allow users to queue music\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<CustomCheckBox color=\"default\" onClick={() => setAllowSkip(!allowSkip)} />}\r\n                                label=\"Allow users to skip songs\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<CustomCheckBox color=\"default\" onClick={() => setAllowPlayPause(!allowPlayPause)} />}\r\n                                label=\"Allow users to Play/Pause music\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Host\r\n","import { useState } from 'react'\r\nimport { TextField, withStyles, FormHelperText } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport { GreenButton } from '../Buttons'\r\nimport './Join.css'\r\n\r\nconst TextStyled = withStyles({\r\n    root: {\r\n        '& input:valid + fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '&:hover fieldset': {\r\n                borderColor: green[400],\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: green[400],\r\n            }\r\n        },\r\n        '& .MuiFormLabel-root': {\r\n            color: 'grey'\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            color: 'white'\r\n        },\r\n        '& .MuiFormLabel-root.Mui-focused': {\r\n            color: green[400],\r\n        }\r\n    }\r\n})(TextField)\r\n\r\n\r\nconst Create = () => {\r\n    const [error, setError] = useState(false)\r\n    const [helperText, setHelperText] = useState('')\r\n    const [code, setCode] = useState('')\r\n\r\n    const onRoomJoin = async (e) => {\r\n        console.log(code)\r\n        const res = await fetch(`/api/getRoom/${code}`)\r\n        if (res.status === 404) {\r\n            setError(true)\r\n            setHelperText('invalid room code')\r\n            e.target.value=''\r\n        }\r\n        if(res.status===200){\r\n            window.localStorage.setItem('code',code)\r\n            window.location = `/room/${code}`\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container join-container\">\r\n            <TextStyled error={error} variant=\"outlined\" label=\"Input Room Code\" value={code} onChange={(e)=>setCode(e.target.value.toUpperCase())}/>\r\n            <FormHelperText error={error}>{helperText}</FormHelperText>\r\n            <div className=\"bottom\">\r\n                <GreenButton onClick={onRoomJoin} size=\"large\" className=\"btn\">JOIN</GreenButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div style={styles.header} href=\"/\">\r\n            <span style={styles.span}><Link to=\"/\" style={styles.a}>Logo</Link></span>\r\n            <h2> <Link to=\"/\" style={styles.a}>POGCHAMP</Link></h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    header: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        textDecoration: 'none',\r\n        color: 'white'\r\n    },\r\n    span: {\r\n        paddingRight: '15px',\r\n        paddingLeft: '100px',\r\n    },\r\n    a:{\r\n        textDecoration:'none',\r\n        color:'white',\r\n        fontSize:'35px'\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"layout-footer\">\r\n            <div className=\"footer-info\">\r\n                <a href='/'> Terms of use </a>\r\n                <a href='/'> Privacy Policy </a>\r\n                <a href='https://github.com/SteveF42/PogChamp'> GitHub </a>\r\n            </div>\r\n            <span>\r\n                <p>Spotify is copyright Spotify AB and is not affiliated with PogChamp</p>\r\n            </span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { useState } from 'react'\r\nimport { Button, LinearProgress } from '@material-ui/core'\r\nimport { Pause, PlayArrow, SkipNext } from '@material-ui/icons'\r\n\r\n\r\nconst MusicPlayer = ({ currentSong, playSong, pauseSong, skipSong, roomInfo }) => {\r\n    const [isPlaying, setIsPlaying] = useState(currentSong === undefined ? false : currentSong.is_playing)\r\n    const [voted, setVoted] = useState(false)\r\n    const playOrPause = async () => {\r\n        isPlaying ? pauseSong() : playSong();\r\n        setIsPlaying(!isPlaying)\r\n    }\r\n    const styles = {\r\n        playPause: {\r\n            color: (roomInfo.usersCanPlayPause || roomInfo.isHost) ? 'white' : 'grey'\r\n        },\r\n        skip: {\r\n            color: (roomInfo.usersCanSkip || roomInfo.isHost) ? 'white' : 'grey'\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {currentSong !== undefined &&\r\n                <div className=\"musicPlayer\">\r\n                    <div className=\"leftHalf\">\r\n                        <img src={currentSong.item.album.images[1].url} height=\"200\" width=\"200\" alt=\"none\" placeholder=\"img\"></img>\r\n                    </div>\r\n                    <div className=\"rightHalf\">\r\n                        <div className=\"songInfo\">\r\n                            <h3 className=\"songTitle\">\r\n                                {currentSong.item.name}\r\n                            </h3>\r\n                            <div className=\"songArtists\">\r\n                                {currentSong.item.artists.map(obj => <p className=\"artists\" key={obj.id}>{obj.name}</p>)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"audioController\">\r\n                            <div className='trackButtons'>\r\n                                <div className=\"pauseOrPlay\">\r\n                                    <Button disabled={!(roomInfo.usersCanPlayPause || roomInfo.isHost)} onClick={playOrPause} startIcon={isPlaying ? <Pause style={styles.playPause} /> : <PlayArrow style={styles.playPause} />} />\r\n                                </div>\r\n                                <div className=\"skip\">\r\n                                    <p></p>\r\n                                    <Button style={{ color: 'white' }} disabled={!(roomInfo.usersCanSkip || roomInfo.isHost)} startIcon={<SkipNext style={styles.skip} />}\r\n                                        onClick={() => {\r\n                                            skipSong(window.localStorage.getItem('code'), voted); setIsPlaying(true); setVoted(!voted);\r\n                                        }}>\r\n                                        {roomInfo.currentVotes} / {roomInfo.votesToSkip}\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"trackProgress\">\r\n                                <LinearProgress variant=\"determinate\" value={(currentSong.progress_ms / currentSong.item.duration_ms) * 100}></LinearProgress>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default MusicPlayer\r\n","import { useState } from 'react'\r\nimport { TextField, Checkbox, FormControlLabel, withStyles } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport { GreenButton } from '../Buttons'\r\n\r\n\r\nconst TextStyled = withStyles({\r\n    root: {\r\n        '& input:valid + fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '&:hover fieldset': {\r\n                borderColor: green[400],\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: green[400],\r\n            }\r\n        },\r\n        '& .MuiFormLabel-root': {\r\n            color: 'white'\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            color: 'white'\r\n        },\r\n        '& .MuiFormLabel-root.Mui-focused': {\r\n            color: green[400],\r\n\r\n        }\r\n    }\r\n})(TextField)\r\n\r\nconst CustomCheckBox = withStyles({\r\n    root: {\r\n        color: green[400],\r\n\r\n    }\r\n})(Checkbox)\r\n\r\n\r\n\r\n\r\nconst PopUp = ({ usersCanSkip, usersCanQueue, usersCanPlayPause, hidePopUp, votesToSkip, props }) => {\r\n    const [canPlayPause, setCanPlayPause] = useState(usersCanPlayPause)\r\n    const [canQueue, setCanQueue] = useState(usersCanQueue)\r\n    const [canSkip, setCanSkip] = useState(usersCanSkip)\r\n    const [skipVotes, setSkipVotes] = useState(votesToSkip)\r\n\r\n\r\n\r\n    const onClick = async (e) => {\r\n        //update the room info\r\n        await fetch('/api/updateRoom', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                usersCanPlayPause: canPlayPause,\r\n                usersCanQueue: canQueue,\r\n                usersCanSkip: canSkip,\r\n                votesToSkip: skipVotes,\r\n                updatePermissions: true\r\n            })\r\n        })\r\n        hidePopUp(e)\r\n    }\r\n\r\n    return (\r\n        <div className=\"popUp\" onClick={hidePopUp} style={props}>\r\n            <div className=\"popUpContent\">\r\n                <TextStyled onChange={(e) => setSkipVotes(e.target.value)} variant=\"outlined\" defaultValue={skipVotes} required={true} type=\"number\" label=\"Vote required to skip\" inputProps={{ style: { textAlign: 'center' } }} />\r\n                <FormControlLabel control={<CustomCheckBox color=\"default\" checked={canPlayPause} onChange={() => setCanPlayPause(!canPlayPause)} />} label=\"Allow users to play/pause\" />\r\n                <FormControlLabel control={<CustomCheckBox color=\"default\" checked={canSkip} onChange={() => setCanSkip(!canSkip)} />} label=\"Allow users to skip\" />\r\n                <FormControlLabel control={<CustomCheckBox color=\"default\" checked={canQueue} onChange={() => setCanQueue(!canQueue)} />} label=\"Allow users to queue music\" />\r\n                <div className=\"updateRoomButton\">\r\n                    <GreenButton className=\"roomUpdate\" onClick={onClick}>Update Room</GreenButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopUp\r\n","//pauses the song\r\nexport const pauseSong = async (code) => {\r\n    console.log('pause')\r\n\r\n    const res = await fetch('/spotify/pause', {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            code: code\r\n        })\r\n    })\r\n    if (res.status !== 200) {\r\n        console.log(res)\r\n    }\r\n}\r\n\r\n//resumes playback\r\nexport const playSong = async (code,params = {context_uri:'',offset:0}) => {\r\n    console.log('play')\r\n\r\n    const res = await fetch('/spotify/play', {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            code: code,\r\n            context_uri: params.context_uri,\r\n            offset:{\r\n                position: params.offset\r\n            }\r\n        })\r\n    })\r\n    if (res.status !== 200) {\r\n        console.log(res)\r\n    }\r\n}\r\n\r\nexport const skipSong = async (code,voted=false) => {\r\n    console.log('skip')\r\n\r\n    const res = await fetch('/spotify/skip', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            code,\r\n            voted\r\n        })\r\n    })\r\n    if (res.status !== 200) {\r\n        console.log(res)\r\n    }\r\n}","import { PlayArrow, QueueMusic } from '@material-ui/icons'\r\nimport { Button } from '@material-ui/core'\r\nimport { playSong } from './utils'\r\n\r\nconst Song = ({ bandaid = false, imgSrc, artists, songName, songLength, dimensions, context_uri, trackNumber, spotifyTrack, displayButtons }) => {\r\n\r\n    const onSongEvent = () => {\r\n        const params = {\r\n            context_uri,\r\n            offset: trackNumber - 1\r\n        }\r\n        playSong(window.localStorage.getItem('code'), params)\r\n    }\r\n\r\n    const addToQueue = async () => {\r\n        //adds song to queue through spotify\r\n        await fetch('/spotify/addToQueue', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                uri: spotifyTrack,\r\n                code: window.localStorage.getItem('code')\r\n            })\r\n        })\r\n\r\n        //adds song to queue on api\r\n        const artistsArr = []\r\n        for (let i of artists) {\r\n            artistsArr.push(i.name)\r\n        }\r\n\r\n\r\n        await fetch('/api/updateRoom', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                queueSong: true,\r\n                imgSrc,\r\n                artists: artistsArr,\r\n                songName,\r\n                songLength,\r\n                context_uri,\r\n                trackNumber,\r\n                spotifyTrack,\r\n                code: window.localStorage.getItem('code')\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"song\">\r\n            <div className=\"song_leftSide\">\r\n                {displayButtons &&\r\n                    <>\r\n                        <Button onClick={onSongEvent} startIcon={<PlayArrow />}></Button>\r\n                        <Button onClick={addToQueue} startIcon={<QueueMusic />}></Button>\r\n                    </>\r\n                }\r\n                <img src={imgSrc} {...dimensions} alt={'noThumbnail.jpg'}></img>\r\n            </div>\r\n\r\n            <div className=\"songDetails\">\r\n                <div className=\"artists\">\r\n\r\n                    <p>artists:</p>\r\n                    {artists.map(item => {\r\n                        return (\r\n                            <div key={bandaid ? item : item.name} style={{width:'100%',textAlign:'center'}}>\r\n                                {bandaid ?\r\n                                    <p>{item}</p>\r\n                                    :\r\n                                    <p>{item.name}</p>\r\n                                }\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"songName\">\r\n                    <p>Song:</p>\r\n                    <p>{songName}</p>\r\n                </div>\r\n                <div className=\"songLength\">\r\n\r\n                    <p>Duration:</p>\r\n                    <p>{(songLength / 1000 / 60).toFixed(2)}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song\r\n","import { TextField, Button } from '@material-ui/core'\r\nimport {  ArrowBack } from '@material-ui/icons'\r\nimport { GreenButton } from '../Buttons'\r\nimport { useTransition, animated } from 'react-spring'\r\nimport Song from './Song'\r\n\r\nconst SearchComponent = ({searchItems, changeSearchView,setQuaryParams,searchSong}) => {\r\n    const searchAnimation = useTransition(searchItems, item => item.id, {\r\n        from: { transform: 'translate3d(0,120px,0) scale(0)', opacity: 0 },\r\n        enter: item => async (next, cancel) => {\r\n            await next({ transform: 'translate3d(0,0,0) scale(1)', opacity: 1 })\r\n        },\r\n        leave: { display: 'none' },\r\n        trail: 125,\r\n    })\r\n\r\n    return (\r\n        <div className=\"searchSong\">\r\n            <div className=\"searchInput\">\r\n                <Button onClick={changeSearchView} startIcon={<ArrowBack />}>back</Button>\r\n                <TextField label=\"Search\" onChange={setQuaryParams} />\r\n                <GreenButton onClick={searchSong}>Submit</GreenButton>\r\n            </div>\r\n            <div className=\"searchItems\">\r\n                {searchAnimation.map(({ item, key, props }) => {\r\n                    return (\r\n                        <animated.div key={key} style={props} >\r\n                            <Song\r\n                                key={item.id}\r\n                                artists={item.artists}\r\n                                songName={item.name}\r\n                                imgSrc={item.album.images[2].url}\r\n                                songLength={item.duration_ms}\r\n                                dimensions={{ height: 64, width: 64 }}\r\n                                context_uri={item.album.uri}\r\n                                trackNumber={item.track_number}\r\n                                spotifyTrack={item.uri}\r\n                                displayButtons={true} />\r\n                        </animated.div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchComponent","import { Button } from '@material-ui/core'\r\nimport { Add } from '@material-ui/icons'\r\nimport { useTransition, animated,useSpring } from 'react-spring'\r\nimport {useState} from 'react'\r\nimport Song from './Song'\r\n\r\nconst SongQueue = ({ changeSearchView, songQueue }) => {\r\n    const [bounce, setBounce] = useState(false)\r\n\r\n    const queueAnimation = useTransition(songQueue, item => item._id, {\r\n        from: { transform: 'translate3d(0,120px,0) scale(0)', opacity: 0 },\r\n        enter: item => async (next, cancel) => {\r\n            await next({ transform: 'translate3d(0,0,0) scale(1)', opacity: 1 })\r\n        },\r\n        leave: item => async (next, cancel) => { await next({ transform: 'translate3d(0,-25px,0) scale(1)', opacity: 0, position:'absolute'})},\r\n        trail: 75,\r\n    })\r\n    const bounceUp = useSpring({\r\n        from: {transform:\"translate3d(0,0,0)\"},\r\n        to:{transform: bounce ? 'translate3d(0,-64,0)' : ''}\r\n    })\r\n    const clickEvent = e =>{\r\n        changeSearchView(e)\r\n        setBounce(false)\r\n        setBounce(true)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"songQueue\">\r\n            <Button onClick={changeSearchView} style={{ color: 'white' }} startIcon={<Add />} >Add Song</Button>\r\n            {queueAnimation.map(({ item, key, props }) => {\r\n                return (\r\n                    <animated.div key={key} style={bounceUp, props}>\r\n                        <Song bandaid={true}\r\n                            key={item._id}\r\n                            artists={item.artists}\r\n                            songName={item.songName}\r\n                            imgSrc={item.imgSrc}\r\n                            songLength={item.songLength}\r\n                            dimensions={{ height: 64, width: 64 }}\r\n                            context_uri={item.context_uri}\r\n                            trackNumber={item.trackNumber}\r\n                            displayButtons={false} />\r\n                    </animated.div>\r\n                )\r\n            })}\r\n            {songQueue.length <= 0 &&\r\n                <p>No songs in queue</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongQueue","import { useState, useEffect } from 'react'\r\nimport SearchSong from './SearchSong'\r\nimport SongQueue from './SongQueue'\r\n\r\nconst QueueView = ({ Queue, code }) => {\r\n    //map of objects to be filled from songs from spotify\r\n    const [songQueue, setSongQueue] = useState(Queue === undefined ? [] : [...Queue])\r\n    const [searchItems, setSearchItems] = useState(JSON.parse(window.localStorage.getItem('songSearch')) || [])\r\n    const [queryParams, setQueryParams] = useState('')\r\n    const [searchView, setSearchView] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        if (Queue !== undefined) {\r\n            setSongQueue([...Queue])\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n    }, [Queue])\r\n\r\n\r\n\r\n    const searchSong = async () => {\r\n        console.log(queryParams)\r\n        const response = await fetch('/spotify/searchSpotify', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                query: queryParams,\r\n                code,\r\n                type: 'track'\r\n            })\r\n        })\r\n        const data = await response.json()\r\n        if (data.tracks !== undefined) {\r\n            setSearchItems([...data.tracks.items])\r\n            window.localStorage.setItem('songSearch', [JSON.stringify(data.tracks.items)])\r\n        }\r\n    }\r\n\r\n    const changeSearchView = ()=>{\r\n        setSearchView(!searchView)\r\n    }\r\n    const updateQuaryParams = (e)=>{\r\n        setQueryParams(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            {searchView ?\r\n                <SongQueue changeSearchView={changeSearchView} songQueue={songQueue}/>\r\n                :\r\n                <SearchSong searchItems={searchItems} changeSearchView={changeSearchView} setQuaryParams={updateQuaryParams} searchSong={searchSong}/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QueueView\r\n","import { useMeasure } from 'react-use'\r\nimport { useEffect, useState } from 'react'\r\nimport React from 'react'\r\nimport { Switch, FormControlLabel } from '@material-ui/core'\r\nimport { FadeMenu, BlueButton } from '../Buttons'\r\nimport { Transition } from 'react-spring/renderprops'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport MusicPlayer from './MusicPlayer'\r\nimport PopUp from './PopUp'\r\nimport QueueView from './QueueView'\r\nimport { pauseSong, playSong, skipSong } from './utils'\r\nimport './Room.css'\r\n\r\nconst Room = () => {\r\n    const code = window.localStorage.getItem('code') || window.location.pathname.substring(window.location.pathname.lastIndexOf('/') + 1)\r\n    const [availableDevices, setAvailableDevices] = useState()\r\n    const [displayPopUp, setDisplayPopUp] = useState(false)\r\n    const [currentSong, setCurrentSong] = useState()\r\n    const [view, setView] = useState(false)\r\n    const [roomInfo, setRoomInfo] = useState({ isHost: false })\r\n    const [contentHeight, setContentHeight] = useState(0)\r\n    const [musicViewHeight, setMusicViewHeight] = useState(0)\r\n    const [queueRef, queueHeight] = useMeasure()\r\n    const [musicRef, musicHeight] = useMeasure()\r\n\r\n    const containerResize = useSpring({\r\n        to: { height: view ? contentHeight : musicViewHeight }\r\n    })\r\n\r\n\r\n    //when component mounts, it sets a timer to poll with the server\r\n    useEffect(() => {\r\n        window.localStorage.setItem('code', code)\r\n        getCurrentSong()\r\n        getRoomInfo().then((roomInfo) => {\r\n            if (roomInfo.isHost) {\r\n                getAvailableDevices()\r\n            } else {\r\n                setAvailableDevices({ isHost: false })\r\n            }\r\n        })\r\n\r\n        //keeps a constant poll to the server\r\n        const timerID = setInterval(() => {\r\n            getCurrentSong()\r\n            getRoomInfo()\r\n            // if(roomInfo.isHost){\r\n            //     fetch('/spotify/isAuthenticated')\r\n            // }\r\n        }, 2500)\r\n\r\n        return () => {\r\n            clearInterval(timerID)\r\n            //if the host leaves then clean up the queue\r\n            fetch('/api/clearQueue', { method: 'PUT' })\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setContentHeight(queueHeight.height)\r\n        setMusicViewHeight(musicHeight.height)\r\n    }, [queueHeight, musicHeight])\r\n\r\n    const getAvailableDevices = async () => {\r\n        const res = await fetch(`/spotify/getAvailableDevices`)\r\n        const data = await res.json()\r\n        if (res.status === 200) {\r\n            setAvailableDevices({ ...data, isHost: true })\r\n        }\r\n    }\r\n\r\n    //gets the roomInfo for other users\r\n    const getRoomInfo = async () => {\r\n        const res = await fetch(`/api/getRoom/${code}`)\r\n        const data = await res.json()\r\n        if (res.status === 200) {\r\n            setRoomInfo(data.roomInfo)\r\n            return data.roomInfo\r\n        }\r\n    }\r\n\r\n    //gets the currently active song\r\n    const getCurrentSong = async () => {\r\n        const res = await fetch('/spotify/currentlyPlaying', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                code: code\r\n            })\r\n        })\r\n\r\n        if (res.status !== 200) {\r\n            console.log('No Current song playing')\r\n            return\r\n            //access token expired\r\n        } else if (res.status === 401) {\r\n            console.log('access denied')\r\n            return\r\n        }\r\n\r\n        const data = await res.json()\r\n        if (currentSong === undefined || currentSong.item !== data.song.item) {\r\n            if (data.song !== null && data.song.item != null) {\r\n                setCurrentSong(data.song)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const playAnimation = () => {\r\n        const elements = document.getElementsByClassName('attachAnimation')\r\n        for (let item of elements) {\r\n            item.classList.remove('playAnimation')\r\n            void item.offsetWidth\r\n            item.classList.add('playAnimation')\r\n        }\r\n    }\r\n\r\n    //lets the user choose a different device to output from\r\n    const startPlaybackOnDevice = async (e) => {\r\n        const deviceID = e.target.id\r\n        if (deviceID === '') return\r\n        const body = {\r\n            deviceID\r\n        }\r\n        console.log(body);\r\n        const res = await fetch('/spotify/playNewDevice', {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n        console.log(res);\r\n        if (currentSong == null || currentSong.is_playing === false) {\r\n            playSong(code)\r\n            getCurrentSong()\r\n        }\r\n    }\r\n    const hidePopUp = (e) => {\r\n        const className = e.target.className\r\n        if (className === 'popUp' || className === 'MuiButton-label') {\r\n            setDisplayPopUp(!displayPopUp)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Transition keys={displayPopUp} items={displayPopUp} from={{ opacity: 0 }} enter={{ opacity: 1 }} leave={{ opacity: 0 }} config={{duration:200}}>\r\n                {(displayPopUp) => displayPopUp && ((props) => (\r\n                            <PopUp\r\n                                props={props}\r\n                                hidePopUp={hidePopUp}\r\n                                usersCanPlayPause={roomInfo.usersCanPlayPause}\r\n                                usersCanQueue={roomInfo.usersCanQueue}\r\n                                usersCanSkip={roomInfo.usersCanSkip}\r\n                                votesToSkip={roomInfo.votesToSkip} />\r\n                    ))}\r\n            </Transition>\r\n            <div className=\"roomContainer\">\r\n\r\n                <div className=\"topHalf\">\r\n                    <div className=\"topItems\">\r\n                        <span className=\"roomCode\">\r\n                            <h3 style={{ fontSize: \"1.58rem\" }}>Code: {window.localStorage.getItem('code')}</h3>\r\n                        </span>\r\n                        <div className=\"queueSwitch\">\r\n                            <FormControlLabel\r\n                                labelPlacement=\"top\"\r\n                                control={\r\n                                    <Switch\r\n                                        size='medium'\r\n                                        value={view}\r\n                                        onChange={() => {\r\n                                            setView(!view)\r\n                                            playAnimation()\r\n\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label={<p className=\"playAnimation\" style={{ margin: '0' }}> {view ? 'Queue' : 'Music'}</p>}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <animated.div className=\"musicContainer\" style={containerResize}>\r\n                        {/* switches between the music view or the queue view */}\r\n                        <Transition\r\n                            items={view}\r\n                            from={{ opacity: 0 }}\r\n                            enter={{ opacity: 1 }}\r\n                            leave={{ display: 'none' }}\r\n                            delay={200}\r\n                            config={{ duration: 700 }}\r\n                        >\r\n                            {(view) => (\r\n                                !view\r\n                                    ? props =>\r\n                                        <div style={props} ref={musicRef}>\r\n                                            <MusicPlayer roomInfo={roomInfo} currentSong={currentSong} pauseSong={() => pauseSong(code)} playSong={() => playSong(code)} skipSong={skipSong} />\r\n                                            <div className=\"bottomButtons\">\r\n                                                {(availableDevices !== undefined && roomInfo.isHost) &&\r\n                                                    <div className=\"availableDevices\">\r\n                                                        <FadeMenu menuItems={availableDevices.devices} label=\"Listening Device\" startPlaybackOnDevice={startPlaybackOnDevice}></FadeMenu>\r\n                                                    </div>\r\n                                                }\r\n                                                {roomInfo.isHost &&\r\n                                                    <div className=\"roomSettings\">\r\n                                                        <BlueButton style={{ marginLeft: '10px' }} onClick={() => setDisplayPopUp(!displayPopUp)}>Room Settings</BlueButton>\r\n                                                    </div>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    : props =>\r\n                                        <div style={props} ref={queueRef}>\r\n                                            <QueueView Queue={roomInfo.songQueue} code={code} />\r\n                                        </div>\r\n                            )}\r\n                        </Transition>\r\n                    </animated.div>\r\n                </div>\r\n                <div className=\"bottomHalf\">\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Room\r\n","import {useEffect} from 'react'\r\n\r\nconst AuthCallback = () => {\r\n\r\n    useEffect(() => {\r\n        //parse url params\r\n        const callback = async ()=>{\r\n\r\n            const urlParams = new URLSearchParams(window.location.search);\r\n            \r\n            if(urlParams.has('code')){\r\n                const res = await fetch('/spotify/callback',{\r\n                    method:'POST',\r\n                    credentials:'include',\r\n                    headers:{\r\n                        'Content-Type':'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        code:urlParams.get('code')\r\n                    })\r\n                })\r\n                if(res.status===200){\r\n                    window.history.replaceState(null,null,'/host')\r\n                    window.location = '/host'\r\n                }\r\n            }else if(urlParams.has('error')){\r\n                window.history.go(-2)\r\n            }\r\n        }\r\n        callback()        \r\n    }, [])\r\n    \r\n    return (null)\r\n}\r\n\r\nexport default AuthCallback\r\n","import Home from './components/Home/Home'\nimport Host from './components/Host/Host'\nimport Join from './components/Join/Join'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Room from './components/Room/Room'\nimport AuthCallback from './components/AuthCallback'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.css'\n\n\nfunction App() {\n  return (\n\n    <div className='App main-container'>\n      <Router>\n        <Header />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/join' exact component={Join} />\n          <Route path='/host' component={Host} />\n          <Route path='/authCallback' component={AuthCallback} />\n          <Route path='/room/:id' component={Room} />\n          <Route path='/' render={()=>{\n            return(\n              <p>Not Found 404</p>\n            )\n          }} />\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App style={{height:'100%'}}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}