[{"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\index.js":"1","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\App.js":"2","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Header.js":"3","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Footer.js":"4","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\AuthCallback.js":"5","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Home\\Home.js":"6","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Host\\Host.js":"7","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Join\\Join.js":"8","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\Room.js":"9","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Buttons.js":"10","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\utils.js":"11","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\PopUp.js":"12","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\QueueView.js":"13","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\MusicPlayer.js":"14","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\SongQueue.js":"15","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\SearchSong.js":"16","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\Song.js":"17"},{"size":453,"mtime":1615527978703,"results":"18","hashOfConfig":"19"},{"size":1014,"mtime":1615517669116,"results":"20","hashOfConfig":"19"},{"size":846,"mtime":1615584205114,"results":"21","hashOfConfig":"19"},{"size":652,"mtime":1615584181339,"results":"22","hashOfConfig":"19"},{"size":1253,"mtime":1615584115537,"results":"23","hashOfConfig":"19"},{"size":2010,"mtime":1615584858490,"results":"24","hashOfConfig":"19"},{"size":6791,"mtime":1633506089339,"results":"25","hashOfConfig":"19"},{"size":2728,"mtime":1633506089340,"results":"26","hashOfConfig":"19"},{"size":9661,"mtime":1633506082280,"results":"27","hashOfConfig":"19"},{"size":1681,"mtime":1615584161918,"results":"28","hashOfConfig":"19"},{"size":1439,"mtime":1615584790877,"results":"29","hashOfConfig":"19"},{"size":3187,"mtime":1615584281293,"results":"30","hashOfConfig":"19"},{"size":2055,"mtime":1615584340559,"results":"31","hashOfConfig":"19"},{"size":3362,"mtime":1633506082279,"results":"32","hashOfConfig":"19"},{"size":2252,"mtime":1615584772702,"results":"33","hashOfConfig":"19"},{"size":2141,"mtime":1633506082281,"results":"34","hashOfConfig":"19"},{"size":3225,"mtime":1633506082282,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"14vox3i",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\index.js",[],["73","74"],"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\App.js",[],"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Header.js",[],"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Footer.js",[],"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\AuthCallback.js",[],"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Host\\Host.js",["75"],"/* \r\n    filename: Host.js \r\n    description: Allows user to log in to spotify and host their very own room\r\n*/\r\nimport React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { TextField, Checkbox, FormControlLabel } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport { withStyles } from '@material-ui/core'\r\nimport './Host.css'\r\nimport { GreenButton, BlueButton } from '../Buttons'\r\n\r\nconst TextStyled = withStyles({\r\n    root: {\r\n        '& input:valid + fieldset': {\r\n            borderColor: 'white',\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '&:hover fieldset': {\r\n                borderColor: green[400],\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                borderColor: green[400],\r\n            }\r\n        },\r\n        '& .MuiFormLabel-root': {\r\n            color: 'grey'\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            color: 'white'\r\n        },\r\n        '& .MuiFormLabel-root.Mui-focused': {\r\n            color: green[400],\r\n\r\n        }\r\n    }\r\n})(TextField)\r\n\r\nconst CustomCheckBox = withStyles({\r\n    root: {\r\n        color: green[400],\r\n\r\n    }\r\n})(Checkbox)\r\n\r\n\r\n\r\nconst Host = () => {\r\n    const [session, setSession] = useState(null)\r\n    const [allowQueue, setAllowQueue] = useState(false)\r\n    const [allowSkip, setAllowSkip] = useState(false)\r\n    const [allowPlayPause, setAllowPlayPause] = useState(false)\r\n    const [votesToSkip, setVotesToSkip] = useState(1)\r\n    const [roomPassCode, setRoomPassCode] = useState('')\r\n    const [usePassCode, setUsePassCode] = useState(false)\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        const getRoom = async () => {\r\n            const response = await fetch('/api/createRoom', {\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            })\r\n            const data = await response.json()\r\n            setSession(data.room)\r\n        }\r\n        getRoom()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    //gets spotify redirect url\r\n    const getSpotifyLogin = async () => {\r\n        const getSpotifyLogin = await fetch('/spotify/getAuthUrl', { credentials: 'include' })\r\n        const spotifyLogin = await getSpotifyLogin.json()\r\n        window.location.assign(spotifyLogin.url)\r\n    }\r\n\r\n    const createRoom = async () => {\r\n        //sends a request to the server to create a new room\r\n        const isAuthenticated = await fetch('/spotify/isAuthenticated', {\r\n            credentials: 'include'\r\n        })\r\n        const authData = await isAuthenticated.json()\r\n\r\n        console.log(authData)\r\n\r\n        //if something went wrong and the user isn't logged in or user tokens are invalid they'll need to login\r\n        if (!authData.authenticated) {\r\n            getSpotifyLogin()\r\n        } else {\r\n        //if not then just create a room and send them to it\r\n            const data = {\r\n                votesToSkip:votesToSkip,\r\n                usersCanQueue: allowQueue,\r\n                usersCanPlayPause: allowPlayPause,\r\n                usersCanSkip: allowSkip,\r\n                override: session != null,\r\n                roomPassword: roomPassCode,\r\n                setPassword: usePassCode\r\n            }\r\n\r\n            const res = await fetch('/api/createRoom', {\r\n                method: \"POST\",\r\n                credentials: 'include',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n\r\n            const json = await res.json()\r\n            console.log(json.Room)\r\n            window.localStorage.setItem('code',json.Room.code)\r\n            window.location.href = `/room/${json.Room.code}`\r\n        }\r\n    }\r\n    //shows that the user already has an active session going \r\n    const returnToRoom = async () => {\r\n        //redirect user back to old room \r\n        const isAuthenticated = await fetch('/spotify/isAuthenticated', {\r\n            credentials: 'include'\r\n        })\r\n        const data = await isAuthenticated.json()\r\n        if(!data.authenticated){\r\n            getSpotifyLogin()\r\n        }else{       \r\n            window.localStorage.setItem('code',session.code)\r\n            window.location = `/room/${session.code}`\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"select-options\">\r\n                <div className=\"rejoin-room\">\r\n                    {session != null && <BlueButton variant=\"contained\" color=\"secondary\" size=\"large\" onClick={returnToRoom}>Re-Join: {session.code}</BlueButton>}\r\n                </div>\r\n\r\n                <GreenButton variant=\"contained\" color=\"primary\" size=\"large\" onClick={createRoom}> Create New Room </GreenButton>\r\n                <div className=\"create-new-room\">\r\n                    <TextStyled onChange={(e) => setVotesToSkip(e.target.value)} variant=\"outlined\" defaultValue={votesToSkip} required={true} type=\"number\" label=\"Vote required to skip\" inputProps={{ style: { textAlign: 'center' } }} />\r\n                    <div>\r\n                        <div className=\"options\">\r\n                            <FormControlLabel\r\n                                control={<CustomCheckBox color=\"default\" onClick={() => setAllowQueue(!allowQueue)} />}\r\n                                label=\"Allow users to queue music\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<CustomCheckBox color=\"default\" onClick={() => setAllowSkip(!allowSkip)} />}\r\n                                label=\"Allow users to skip songs\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<CustomCheckBox color=\"default\" onClick={() => setAllowPlayPause(!allowPlayPause)} />}\r\n                                label=\"Allow users to Play/Pause music\"\r\n                            />\r\n                            <FormControlLabel \r\n                                control = {<CustomCheckBox color=\"default\" onClick={()=> setUsePassCode(!usePassCode)}/>}\r\n                                label=\"Set Room Password\"\r\n                            />\r\n                            {usePassCode == true && <TextStyled id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" style={{width:\"100%\"}} onChange={(e) => setRoomPassCode(e.target.value)}/>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Host\r\n","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Join\\Join.js",[],"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\Room.js",[],"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Buttons.js",[],"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\utils.js",[],"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\PopUp.js",[],"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\QueueView.js",[],"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\MusicPlayer.js",[],"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\SongQueue.js",["76","77"],"/* \r\n    filename: SongQueue.js \r\n    description: shows the current song queue of whats next\r\n*/\r\nimport { Button } from '@material-ui/core'\r\nimport { Add } from '@material-ui/icons'\r\nimport { useTransition, animated,useSpring } from 'react-spring'\r\nimport {useState} from 'react'\r\nimport Song from './Song'\r\n\r\nconst SongQueue = ({ changeSearchView, songQueue }) => {\r\n    const [bounce, setBounce] = useState(false)\r\n\r\n    const queueAnimation = useTransition(songQueue, item => item._id, {\r\n        from: { transform: 'translate3d(0,120px,0) scale(0)', opacity: 0 },\r\n        enter: item => async (next, cancel) => {\r\n            await next({ transform: 'translate3d(0,0,0) scale(1)', opacity: 1 })\r\n        },\r\n        leave: item => async (next, cancel) => { await next({ transform: 'translate3d(0,-25px,0) scale(1)', opacity: 0, position:'absolute'})},\r\n        trail: 75,\r\n    })\r\n    const bounceUp = useSpring({\r\n        from: {transform:\"translate3d(0,0,0)\"},\r\n        to:{transform: bounce ? 'translate3d(0,-64,0)' : ''}\r\n    })\r\n    const clickEvent = e =>{\r\n        changeSearchView(e)\r\n        setBounce(false)\r\n        setBounce(true)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"songQueue\">\r\n            <Button onClick={changeSearchView} style={{ color: 'white' }} startIcon={<Add />} >Add Song</Button>\r\n            {queueAnimation.map(({ item, key, props }) => {\r\n                return (\r\n                    <animated.div key={key} style={bounceUp, props}>\r\n                        <Song bandaid={true}\r\n                            key={item._id}\r\n                            artists={item.artists}\r\n                            songName={item.songName}\r\n                            imgSrc={item.imgSrc}\r\n                            songLength={item.songLength}\r\n                            dimensions={{ height: 64, width: 64 }}\r\n                            context_uri={item.context_uri}\r\n                            trackNumber={item.trackNumber}\r\n                            displayButtons={false} />\r\n                    </animated.div>\r\n                )\r\n            })}\r\n            {songQueue.length <= 0 &&\r\n                <p>No songs in queue</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongQueue","C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\SearchSong.js",[],"C:\\Users\\steve\\Documents\\Visual Studio Projects\\Web Development\\NodeJS\\Pogify\\client\\src\\components\\Room\\Song.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":168,"column":42,"nodeType":"84","messageId":"85","endLine":168,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":26,"column":11,"nodeType":"88","messageId":"89","endLine":26,"endColumn":21},{"ruleId":"90","severity":1,"message":"91","line":38,"column":60,"nodeType":"92","messageId":"93","endLine":38,"endColumn":61},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'clickEvent' is assigned a value but never used.","Identifier","unusedVar","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]